export default t=>{class e extends HTMLElement{connectedCallback(){Object.assign(this,t),this.DOM=this.shadow?this.attachShadow({mode:"open"}):this,this.props&&Object.keys(this.props()).forEach((t=>{const e=this.props()[t];if("function"==typeof e)this[t]=e(this.getAttribute(t));else{const e=`Handler for prop ${t} in component ${this.component} is not a function.`;console.warn(e)}})),this.render=()=>{const t=this.styles?`<style>${this.styles()}</style>`:"",e=this.template?this.template():"";this.DOM.innerHTML=t+e,this.parts={},this.DOM.querySelectorAll("[part]").forEach((t=>{t.on=(e,s)=>{s=s.bind(this),t.addEventListener(e,(t=>s(t)))},this.parts[t.getAttribute("part")]=t})),this.DOM.querySelectorAll("[on]").forEach((t=>{const[e,s]=t.getAttribute("on").split(":");t.addEventListener(e,(t=>this[s](t)))})),this?.ready&&this.ready()},this.render()}}!customElements.get(t.component)&&customElements.define(t.component,e)};